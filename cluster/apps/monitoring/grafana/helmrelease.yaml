---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 1h
  chart:
    spec:
      # renovate: registryUrl=https://grafana.github.io/helm-charts
      chart: grafana
      version: 6.32.9
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system

  dependsOn:
    - name: traefik
      namespace: networking
    - name: kube-prometheus-stack
      namespace: monitoring

  values:
    image:
      repository: ghcr.io/k8s-at-home/grafana

    env:
      GF_EXPLORE_ENABLED: true
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_LOG_FILTERS: rendering:debug
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      DS_PROMETHEUS: "prometheus"

    grafana.ini:
      server:
        root_url: "https://grafana.${SECRET_DOMAIN}"
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      analytics:
        check_for_updates: false
      log:
        mode: console
      grafana_net:
        url: https://grafana.net
      # auth:
      #   signout_redirect_url: https://id.${SECRET_DOMAIN}/application/o/grafana/end-session/
      #   # Optionally enable auto-login
      #   oauth_auto_login: true
      # auth.basic:
      #   disable_login_form: true
      # auth.generic_oauth:
      #   enabled: true
      #   allow_sign_up: true
      #   name: Authentik
      #   client_id: grafana
      #   client_secret: ${SECRET_AUTHENTIK_GRAFANA_CLIENT_SECRET}
      #   scopes: openid profile email
      #   auth_url: https://id.${SECRET_DOMAIN}/application/o/authorize/
      #   token_url: https://id.${SECRET_DOMAIN}/application/o/token/
      #   api_url: https://id.${SECRET_DOMAIN}/application/o/userinfo/
      # auth.generic_oauth.group_mapping:
      #   role_attribute_path: "contains(groups[*], 'Grafana Admins') && 'Admin' || contains(groups[*], 'Grafana Editors') && 'Editor' || 'Viewer'"
      #   org_id: 1
      security:
        allow_embedding: true

    adminUser: admin
    adminPassword: "${SECRET_GRAFANA_ADMIN_PASSWORD}"

    ingress:
      enabled: true
      ingressClassName: "traefik"
      annotations:
        hajimari.io/enable: "true"
        hajimari.io/icon: "chart-areaspline"
        traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
      hosts:
        - "grafana.${SECRET_DOMAIN}"
      tls:
        - hosts:
            - "grafana.${SECRET_DOMAIN}"

    persistence:
      enabled: true
      type: pvc
      existingClaim: grafana-config-v1

    plugins:
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - grafana-piechart-panel
      - grafana-clock-panel
      - vonage-status-panel
      - grafana-worldmap-panel
      - grafana-polystat-panel
      - mxswat-separator-panel
      - farski-blendstat-panel
      - clarity89-finnhub-datasource

    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: 'default'
            orgId: 1
            folder: ''
            type: file
            disableDeletion: false
            editable: true
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/default

    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://thanos-query:9090
            isDefault: true
          - name: Loki
            type: loki
            access: proxy
            url: http://loki:3100

    dashboards:
      default:
        calico-felix:
          gnetId: 12175
          revision: 5
          datasource: Prometheus
        ceph-cluster:
          gnetId: 2842
          revision: 14
          datasource: Prometheus
        ceph-osd:
          gnetId: 5336
          revision: 5
          datasource: Prometheus
        ceph-pools:
          gnetId: 5342
          revision: 5
          datasource: Prometheus
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/grafana/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/grafana/dashboards/control-plane.json
          datasource: Prometheus
        velero-better:
          gnetId: 15469
          revision: 1
          datasource: Prometheus
        snmp-stats:
          gnetId: 11169
          revision: 1
          datasource: Prometheus
        speedtest:
          gnetId: 13665
          revision: 1
          datasource: Prometheus
        unifi-sites:
          gnetId: 11311
          revision: 4
          datasource: Prometheus
        unifi-uap:
          gnetId: 11314
          revision: 9
          datasource: Prometheus
        unifi-clients:
          gnetId: 11315
          revision: 8
          datasource: Prometheus
        k8s-deployments:
          gnetId: 8588
          revision: 1
          datasource: Prometheus

    podAnnotations:
      configmap.reloader.stakater.com/reload: "grafana"
      backup.velero.io/backup-volumes: config

    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
        folderAnnotation: grafana_folder
        provider:
          foldersFromFilesStructure: true
      datasources:
        enabled: true
        searchNamespace: ALL

    resources:
      requests:
        cpu: 75m
        memory: 128Mi
      limits:
        memory: 512Mi
