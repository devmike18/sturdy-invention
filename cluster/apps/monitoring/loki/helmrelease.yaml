---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: loki
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://grafana.github.io/helm-charts
      chart: loki
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
      interval: 5m

  install:
    remediation:
      retries: 4
  upgrade:
    remediation:
      remediateLastFailure: true

  values:

    replicas: 1

    ingress:
      enabled: true
      ingressClassName: "traefik"
      annotations:
        hajimari.io/enable: "true"
        hajimari.io/appName: "Loki"
        traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        traefik.ingress.kubernetes.io/router.middlewares: "networking-rfc1918@kubernetescrd"
      hosts:
        - host: "loki.${SECRET_DOMAIN}"
          paths:
            - /
      tls:
        - hosts:
            - "loki.${SECRET_DOMAIN}"

    persistence:
      enabled: false

    serviceMonitor:
      enabled: true

    config:
      storage_config:
        aws:
          bucketnames: loki
          endpoint: "nas02.${SECRET_DOMAIN}:9000"
          s3forcepathstyle: true
          insecure: true
        boltdb_shipper:
          active_index_directory: /data/loki/index
          cache_location: /data/loki/index_cache
          resync_interval: 5s
          shared_store: s3
      ruler:
        storage:
          type: local
          local:
            directory: /rules
        rule_path: /tmp/scratch
        alertmanager_url: http://prometheus-alertmanager:9093
        ring:
          kvstore:
            store: inmemory
        enable_api: true

    alerting_groups:
      #
      # SMART Failures
      #
      - name: smart-failure
        rules:
          - alert: SmartFailures
            expr: |
              sum by (hostname) (count_over_time({hostname=~".+"} |~ "(?i).*smartd.*(error|fail).*"[2m])) > 0
            for: 10s
            labels:
              severity: critical
              category: logs
            annotations:
              # TODO: Figure out how to use hostname in summary
              summary: "SMART has reported failures"
      #
      # *arr applications
      #
      - name: arr
        rules:
          - alert: ArrDatabaseIsLocked
            expr: |
              sum by (app) (count_over_time({app=~".*arr"} |~ "(?i)database is locked"[2m])) > 0
            for: 10s
            labels:
              severity: critical
              category: logs
            annotations:
              # TODO: Figure out how to use hostname in summary
              summary: "An arr app is experiencing locked database issues"
          - alert: ArrDatabaseIsMalformed
            expr: |
              sum by (app) (count_over_time({app=~".*arr"} |~ "(?i)database disk image is malformed"[2m])) > 0
            for: 10s
            labels:
              severity: critical
              category: logs
            annotations:
              # TODO: Figure out how to use hostname in summary
              summary: "An arr app is experiencing malformed database disk image issues"

  valuesFrom:
    - kind: Secret
      name: loki-s3
      valuesKey: minio_access_key
      targetPath: config.storage_config.aws.access_key_id
      optional: false
    - kind: Secret
      name: loki-s3
      valuesKey: minio_secret_key
      targetPath: config.storage_config.aws.secret_access_key
      optional: false
