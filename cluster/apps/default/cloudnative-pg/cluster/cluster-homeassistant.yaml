---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: cluster-homeassistant
  namespace: default
spec:
  instances: 2
  # REmove this commennted image if not using timescale. imageName: ghcr.io/cloudnative-pg/postgresql:14.8-6
  imageName: ghcr.io/imusmanmalik/timescaledb-postgis:14-3.4
  inheritedMetadata:
    labels:
      kube-image-keeper.enix.io/image-caching-policy: ignore
  primaryUpdateStrategy: unsupervised
  storage:
    pvcTemplate:
      accessModes:
        - ReadWriteOnce
      storageClassName: nfs-client
      volumeMode: Filesystem
      resources:
        requests:
          storage: 1Gi
  enableSuperuserAccess: true
  superuserSecret:
    name: cluster-homeassistant-superuser
# bootstrap:
#   recovery:
#     source: &previous-cluster postgres-v2
  bootstrap:
    initdb:
      postInitTemplateSQL: # REmove this section if not using timescale.
        - CREATE EXTENSION timescaledb;
        - CREATE EXTENSION postgis;
        - CREATE EXTENSION postgis_topology;
        - CREATE EXTENSION fuzzystrmatch;
        - CREATE EXTENSION postgis_tiger_geocoder;
      database: homeassistant
      owner: homeassistant
      secret:
        name: cluster-homeassistant-app-user
  postgresql:
    shared_preload_libraries: # remove this if not using timescale.
      - timescaledb
  monitoring:
    enablePodMonitor: true
  backup:
    retentionPolicy: 30d
    barmanObjectStore:
      data:
        compression: gzip
        encryption: AES256
        immediateCheckpoint: false
        jobs: 2
      wal:
        compression: bzip2
        maxParallel: 8
      destinationPath: s3://pgbackup/homeassistant
      endpointURL: "http://${NFS_SERVER}:9000"
      s3Credentials:
        accessKeyId:
          name: secret-cloudnative-pg-admin
          key: aws-access-key-id
        secretAccessKey:
          name: secret-cloudnative-pg-admin
          key: aws-secret-access-key
  # # Note: externalClusters is needed when recovering from an existing cnpg cluster
  # externalClusters:
  #   - name: *previous-cluster
  #     barmanObjectStore:
  #       wal:
  #         compression: bzip2
  #         maxParallel: 8
  #       destinationPath: s3://pgbackup/
  #       endpointURL: "http://${NFS_SERVER}:9000"
  #       s3Credentials:
  #         accessKeyId:
  #           name: secret-cloudnative-pg-admin
  #           key: aws-access-key-id
  #         secretAccessKey:
  #           name: secret-cloudnative-pg-admin
  #           key: aws-secret-access-key
