---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: node-red
  namespace: default
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts
      chart: app-template
      version: 3.0.4
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 5m
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph

  values:
    controllers:
      node-red:
        annotations:
          backup.velero.io/backup-volumes: config
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: "OnRootMismatch"
        containers:
          app:
            image:
              repository: docker.io/nodered/node-red
              tag: 3.1.8@sha256:c2990ca2ed6ca3d36cc558f25c21e261ca966b3dc7194fc4df83352573cfb5f9
            probes:
              liveness:
                enabled: false
              readiness:
                enabled: false
              startup:
                enabled: true
            resources:
              requests:
                cpu: 5m
                memory: 512Mi
              limits:
                memory: 512Mi

            env:
              TZ: "${TZ}"

    service:
      app:
        controller: node-red
        ports:
          http:
            port: 1880

    ingress:
      app:
        enabled: true
        className: "traefik"
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "mdi:sitemap"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-sso@kubernetescrd"
          cert-manager.io/cluster-issuer: "letsencrypt-production"

        hosts:
          - host: &host "node-red.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "node-red-tls"

    persistence:
      config:
        enabled: true
        existingClaim: node-red-config-v1
        advancedMounts:
          main:
            main:
              - path: /data
                readOnly: false
