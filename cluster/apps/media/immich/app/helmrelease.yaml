---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: immich
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 3.0.4
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 5m

  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      automountServiceAccountToken: false

    controllers:
      immich:
        type: deployment
        replicas: 2
        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.2@sha256:930a20e3ea8c82504d8e80f413d042d9936930d625fb098dd306b5aad427a151
              pullPolicy: IfNotPresent
            envFrom:
              - secretRef:
                  name: secret-immich

        containers:
          app:
            dependsOn: redis
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.100.0@sha256:d603fd34d587cbf0c99442bb44da395450157d5eb7dec40d2d1d16f2cfdb988b
            args: ["start-server.sh"]
            envFrom:
              - secretRef:
                  name: &secret "secret-immich"
              - configMapRef:
                  name: &cm "configmap-immich"
            resources:
              requests:
                cpu: 100m
                memory: 512M

      redis:
        type: deployment
        containers:
          app:
            image:
              repository: public.ecr.aws/docker/library/redis
              tag: 7.2.4@sha256:3134997edb04277814aa51a4175a588d45eb4299272f8eff2307bbf8b39e4d43
            env:
              REDIS_REPLICATION_MODE: master
            envFrom:
              - secretRef:
                  name: *secret
            command: ["redis-server", "--requirepass", "$(REDIS_PASSWORD)"]

      ml:
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-machine-learning
              tag: v1.100.0@sha256:612e8856ad92f5915ececd5a67b76b7218f0fe4e41c72fcf1675bee76802294b
            envFrom:
              - secretRef:
                  name: *secret
              - configMapRef:
                  name: *cm
            resources:
              requests:
                memory: 2150M
              limits:
                memory: 8Gi

      micro:
        type: deployment
        replicas: 2
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.100.0@sha256:d603fd34d587cbf0c99442bb44da395450157d5eb7dec40d2d1d16f2cfdb988b
            args: ["start-microservices.sh"]
            envFrom:
              - secretRef:
                  name: *secret
              - configMapRef:
                  name: *cm
            resources:
              requests:
                memory: 512M

    service:
      app:
        annotations:
          traefik.ingress.kubernetes.io/service.sticky.cookie.httponly: "true"
          traefik.ingress.kubernetes.io/service.sticky.cookie.name: "server_id"
        controller: immich
        ports:
          http:
            port: 3001
      ml:
        controller: ml
        ports:
          http:
            port: 3003
      redis:
        controller: redis
        ports:
          http:
            port: 6379
    ingress:
      app:
        enabled: true
        className: "traefik"
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "movie-play"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-chain-immich@kubernetescrd"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
        hosts:
          - host: &host "immich.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "immich-tls"

    persistence:
      library:
        enabled: true
        existingClaim: nfs-immich-pvc
        globalMounts:
          - path: /usr/src/app/upload
      externaldata:
        enabled: true
        existingClaim: nfs-legacyphotos-pvc
        globalMounts:
          - path: /externaldata
