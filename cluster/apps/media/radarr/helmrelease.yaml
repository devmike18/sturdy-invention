---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: radarr
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts/
      chart: app-template
      version: 3.0.4
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 5m

  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: traefik
      namespace: networking

  values:
    controllers:
      radarr:
        annotations:
          backup.velero.io/backup-volumes: config
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/radarr
              tag: 5.3.6.8612@sha256:431f4d8da415645cd18359d0b704d4191f400eb57137ed3e5749774f3915c0a8
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            resources:
              requests:
                cpu: 50m
                memory: 250Mi
              limits:
                memory: 1000Mi
            env:
              TZ: "${TZ}"
              RADARR__AUTHENTICATION_METHOD: "External"
              RADARR__API_KEY: "${SECRET_RADARR_APIKEY}"

        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            supplementalGroups:
              - 44
              - 109
              - 100
    service:
      app:
        controller: radarr
        ports:
          http:
            port: 7878

    ingress:
      radarr:
        enabled: true
        className: "traefik"
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "movie-search"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-sso@kubernetescrd"
          cert-manager.io/cluster-issuer: "letsencrypt-production"

        hosts:
          - host: &host "radarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "radarr-tls"

    persistence:
      config:
        enabled: true
        existingClaim: radarr-config-v1
      media:
        enabled: true
        readOnly: false
        existingClaim: nfs-media-pvc
        globalMounts:
          - path: /media
