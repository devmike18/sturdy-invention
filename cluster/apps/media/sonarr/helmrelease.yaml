---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: sonarr
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts
      chart: app-template
      version: 3.1.0
      interval: 5m
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system

  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph

  values:
    controllers:
      sonarr:
        annotations:
          backup.velero.io/backup-volumes: config

        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            runAsNonRoot: true
            fsGroup: 568
            fsGroupChangePolicy: "OnRootMismatch"
            supplementalGroups:
              - 44
              - 109
              - 100

        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/sonarr
              pullPolicy: IfNotPresent
              tag: 4.0.3.1413@sha256:4284def4b9fd2d3de2898ae3a6adc7aa84b9cd7f4407a35e7c61472519038396
            env:
              TZ: "${TZ}"
              SONARR__AUTHENTICATION_METHOD: "External"
              SONARR__API_KEY: "${SECRET_SONARR_APIKEY}"
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
            resources:
              requests:
                cpu: 50m
                memory: 512Mi
              limits:
                memory: 2048Mi
            # securityContext:
            #   allowPrivilegeEscalation: false
            #   readOnlyRootFilesystem: true
            #   capabilities:
            #     drop:
            #       - ALL

    service:
      app:
        controller: sonarr
        ports:
          http:
            port: 8989

    ingress:
      app:
        enabled: true
        className: "traefik"
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "television-box"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-sso@kubernetescrd"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
        hosts:
          - host: &host "sonarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "sonarr-tls"

    persistence:
      config:
        existingClaim: sonarr-config-v1
        # globalMounts:
        #   - path: /config  # This is already true by default, just being thorough and pedantic.  (Note to self)
      media:
        existingClaim: nfs-media-pvc
        # globalMounts:
        #   - path: /media  # This is already true by default, just being thorough and pedantic.  (Note to self)
