---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: sonarr
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts
      chart: app-template
      version: 2.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 5m
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph

  values:
    controllers:
      main:
        annotations:
          backup.velero.io/backup-volumes: config
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/sonarr
              pullPolicy: IfNotPresent
              tag: 4.0.0.748
            probes:
              liveness:
                enabled: false
              readiness:
                enabled: false
              startup:
                enabled: true
            resources:
              requests:
                cpu: 50m
                memory: 250Mi
              limits:
                memory: 1000Mi

            env:
              TZ: "${TZ}"
              SONARR__AUTHENTICATION_METHOD: "External"

        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            supplementalGroups:
              - 44
              - 109
              - 100

    service:
      main:
        ports:
          http:
            port: 8989

    ingress:
      main:
        enabled: true
        className: "traefik"
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "television-box"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-sso@kubernetescrd"
          cert-manager.io/cluster-issuer: "letsencrypt-production"

        hosts:
          - host: &host "sonarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "sonarr-tls"

    persistence:
      config:
        enabled: true
        existingClaim: sonarr-config-v1
      media:
        readOnly: false
        existingClaim: nfs-media-pvc
        globalMounts:
          - path: /media
